name: CI Pipeline for SonarQube Analysis

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and run unit tests
        run: |
          echo "Starting Build and Tests..."
          ./gradlew build test || { echo "❌ Tests failed! Check logs."; exit 1; }
          echo "✅ Build and Tests passed!"

      - name: Start SonarQube
        run: |
          echo "Starting SonarQube..."
          ./start.sh &

          echo "Waiting for SonarQube to be ready..."
          for i in {1..30}; do
            if curl -s http://localhost:9000/api/system/status | grep -q "UP"; then
              echo "✅ SonarQube is running!"
              exit 0
            fi
            sleep 5
          done

          echo "❌ SonarQube failed to start!"
          exit 1

      - name: Run SonarQube analysis
        run: |
          echo "Running SonarQube analysis..."
          ./gradlew sonarqube --stacktrace \
            -Dsonar.projectKey=tp1_inf8371 \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} || { echo "❌ SonarQube analysis failed!"; exit 1; }
          echo "✅ SonarQube analysis completed!"

