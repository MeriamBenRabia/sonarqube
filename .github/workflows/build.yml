
name: CI Pipeline for SonarQube Analysis

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
      # Étape 1: Checkout du dépôt
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Désactive le clone superficiel pour une meilleure analyse

      # Étape 2: Configuration de JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'  # Vous pouvez choisir une autre distribution si nécessaire

      # Étape 3: Cache des packages SonarQube et Gradle
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      # Étape 4: Compilation du projet et exécution des tests unitaires
      - name: Build and run unit tests
        run: ./gradlew build

      - name: Start SonarQube and verify
        run: |
          # Démarrer SonarQube en arrière-plan
          ./start.sh &
          
          echo "Waiting for SonarQube to start..."
          while ! curl -s http://localhost:9000/api/system/status | grep -q "UP"; do
            sleep 5
          done
          
          echo "SonarQube is up and running!"