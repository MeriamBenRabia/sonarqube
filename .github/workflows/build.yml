name: Manual workflow

on:
  workflow_dispatch:
  push:

jobs:
  all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch command
        run: git fetch origin 157e00ce92a383048ce48cc76e10731064129b86
      - name: Checkout command
        run: git checkout 157e00ce92a383048ce48cc76e10731064129b86
      - name: Create config file
        run: |
          cat <<EOL > assertTrue.txt
          sonar-scanner-engine/src/it/java/org/sonar/scanner/mediumtest/bootstrap/BootstrapMediumIT.java:should_complete_successfull
          server/sonar-main/src/test/java/org/sonar/application/process/ManagedProcessHandlerTest.java:operational_event_is_sent_once
          EOL
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Create script file
        run: |
          echo "
          import re
          
          def modify_test_method(file_path, method_name):
              with open(file_path, 'r+') as file:
                  content = file.read()
          
                  pattern = re.compile(r'(@Test.*?' + re.escape(method_name) + r'.*?\{)', re.DOTALL)
                  match = pattern.search(content)
          
                  if match:
                      start_index = match.end()  
                      brace_count = 1  # On commence à compter à partir de l'accolade ouvrante de la méthode
                      current_index = start_index
          
                      while brace_count > 0 and current_index < len(content):
                          if content[current_index] == '{':
                              brace_count += 1
                          elif content[current_index] == '}':
                              brace_count -= 1
                          current_index += 1
          
                      if brace_count == 0:
                          new_content = (
                              content[:start_index] + 
                              '\n        assertThat(true).isTrue();\n    ' + 
                              content[current_index - 1:]
                          )
          
                          if new_content != content:
                              file.seek(0)
                              file.write(new_content)
                              file.truncate()
          
          def main(config_file):
              with open(config_file, 'r') as file:
                  lines = file.readlines()
              for line in lines:
                  file_path, method_name = line.strip().split(':')
                  modify_test_method(file_path, method_name)
          
          if __name__ == '__main__':
              config_file = 'assertTrue.txt'
              main(config_file)
                  " > modify_tests.py
      - name: Make script executable
        run: chmod +x modify_tests.py
      - name: Execute script
        run: python modify_tests.py
      - name: Print changed files
        run: |
          cat sonar-scanner-engine/src/it/java/org/sonar/scanner/mediumtest/bootstrap/BootstrapMediumIT.java
          cat server/sonar-main/src/test/java/org/sonar/application/process/ManagedProcessHandlerTest.java
      - name: Build
        run: ./gradlew build
      - name: Unzip distribution
        run: |
          unzip -q sonar-application/build/distributions/*.zip -d sonar-application/build/unzipped/
      - name: Start SonarQube
        run: |
          cd sonar-application/build/unzipped/*/bin/linux-x86-64/
          chmod +x sonar.sh
          ./sonar.sh start
