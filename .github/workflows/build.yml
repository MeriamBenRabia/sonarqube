name: CI Pipeline for SonarQube

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build
        run: ./gradlew build

      - name: Run unit tests
        run: ./gradlew test

      - name: Show test results in logs
        run: |
          echo "====== TEST RESULTS ======"
          cat build/reports/tests/test/index.html || echo "Test report not found."
          echo "====== TEST SUMMARY ======"
          cat build/test-results/test/*.xml || echo "Test result XML not found."

      - name: Run test coverage analysis (JaCoCo)
        run: ./gradlew jacocoTestReport

      - name: Show coverage report in logs
        run: |
          echo "====== COVERAGE REPORT ======"
          cat build/reports/jacoco/test/jacocoTestReport.xml || echo "Coverage report not found."

      - name: Start SonarQube
        run: |
          # Démarrer SonarQube en arrière-plan
          ./start.sh &
          
          echo "Waiting for SonarQube to start..."
          while ! curl -s http://localhost:9000/api/system/status | grep -q "UP"; do
            sleep 5
          done
          
          echo "SonarQube is up and running!"